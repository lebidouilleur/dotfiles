#!/usr/bin/env dash

## Copyright (C) 2022  lebidouilleur

## Author: lebidouilleur <lebidouilleur@icloud.com>
## Keywords:

### Commentary:

## This strage script existance is due to the fact that
## on some files, `djvu2pdf` is unable to perform the
## conversion.

### Includes:
. library.sh

### Code:




print_usage() {
    printf "Usage: ${TEXT_BOLD}djvu2jpg2pdf${TEXT_RESET} ${TEXT_FOREGROUND_LIGHT_GRAY}[flags]${TEXT_RESET} ${TEXT_UNDERLINE}<files>${TEXT_RESET}...\n"
    printf "    flags:\n"
    printf "        -${TEXT_FOREGROUND_MAGENTA}h${TEXT_RESET} show this help and exit\n"
    printf "        -${TEXT_FOREGROUND_MAGENTA}v${TEXT_RESET} enable verbose mode\n"
}


# Define global variable for un/quiet convertion
verbose="false"


# There is an issue if the user does not provide any argument
if [ ${#} -eq 0 ]
then
    print_usage
    exit 1
fi


# Check for arguments
while getopts ":hv" options
do
    case $options in
        v)   verbose="true" ;;
        h|?) print_usage ; exit 1 ;;
    esac
done ; shift $((OPTIND-1))


# Finaly extracting archives
while [ ${#} -gt 0 ]
do
    if [ -f "$1" ]
    then
        # Get total pages number
        pages=$(djvused -e n $1)


        for i in $(seq 1 $pages)
        do
            path=".extracted"
            page=$(printf "%03d.jpg" "$i")
            perc=$(printf "%.0f" $(echo "scale=3; $i/$pages*100" | bc))

            # Create extract folder
            if [ ! -d $path ]; then
                mkdir -p $path
            fi

            # Extract each page in a separate folder
            if [ "$verbose" = "true" ]
            then
                if [ "$i" -lt "$pages" ]
                then
                    printf "\033[K ${TEXT_BACKGROUND_CYAN}${TEXT_BOLD} $i/$pages:$perc%% ${TEXT_RESET}"
                    printf " ${TEXT_BOLD}djvu2jpg2pdf${TEXT_RESET}: extracting page $i...\r"
                else
                    printf "\033[K ${TEXT_BACKGROUND_LIGHT_GREEN}${TEXT_BOLD} $i/$pages ${TEXT_RESET}"
                    printf " ${TEXT_BOLD}djvu2jpg2pdf${TEXT_RESET}: extracting page $i...\n"
                fi
            fi
            ddjvu -page=$i -quality=100 $1 "$path/$page"
        done


        # Merging all pages into a single PDF
        [ "$verbose" = "true" ] && printf "${TEXT_BOLD}djvu2jpg2pdf${TEXT_RESET}: merging pages in '${1%.*}.pdf'...\r"
        img2pdf $path/*.jpg -o "${1%.*}.pdf"
        rm -rf $path
        [ "$verbose" = "true" ] && printf "\033[K${TEXT_FOREGROUND_GREEN}${TEXT_BOLD} âœ“ ${TEXT_RESET}"
        [ "$verbose" = "true" ] && printf "${TEXT_BOLD}djvu2jpg2pdf${TEXT_RESET}: merging pages in '${1%.*}.pdf'...\n"

    else
        printf "${TEXT_BOLD}djvu2jpg2pdf${TEXT_RESET}}: ${TEXT_UNDERLINE}$1${TEXT_RESET}: no such file"
    fi
    shift
done
